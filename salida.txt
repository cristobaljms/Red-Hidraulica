[['11' '10' '10' '11' '10' '00' '10' '01' '00' '11' '00']
 ['11' '01' '00' '11' '00' '10' '00' '01' '00' '01' '00']
 ['00' '11' '01' '10' '11' '01' '01' '10' '11' '00' '11']
 ['10' '11' '01' '11' '00' '01' '00' '11' '10' '00' '01']
 ['10' '01' '01' '10' '11' '11' '01' '00' '01' '01' '11']]

 diametros
[[0.0994 0.0814 0.0814 0.0994 0.0814 0.057  0.0814 0.0678 0.057  0.0994  0.057 ]
 [0.0994 0.0678 0.057  0.0994 0.057  0.0814 0.057  0.0678 0.057  0.0678  0.057 ]
 [0.057  0.0994 0.0678 0.0814 0.0994 0.0678 0.0678 0.0814 0.0994 0.057   0.0994]
 [0.0814 0.0994 0.0678 0.0994 0.057  0.0678 0.057  0.0994 0.0814 0.057   0.0678]
 [0.0814 0.0678 0.0678 0.0814 0.0994 0.0994 0.0678 0.057  0.0678 0.0678  0.0994]]

Lx
[310.83 240.22 237.3  401.35 249.85 298.01 119.71 283.68 401.36 184.94 372.26]

individuo 1

Cc
290240.4726

1) Calcular codigo bianrio dependiendo del numero de diametros cargados
i = 0
mientras i != numero_poblacion o se cumpla convergencia de 80% hacer
inicio
    i = i + 1
    2) Calcular matriz de binarios  
    3) Calcular matriz de diametros a partir de la matriz de binarios
    4) Calculamos la FO de csoada individuo
    5) Proceso de seleccion
    6) Proceso de cruzamiento
    7) Proceso de mutacion
    8) con la lista de mutacion por individuo volvemos a crear una matriz de diametros
fin
9) Buscamos al costo del menor diametro por individuo
10) Lo multiplicamos por la suma de las longitudes de las tuberias

Cph
3.870122282218094e+19

CV

vmin vtubo  vmin-vtubo
0.3 1.909 -1.609
0.3 2.276 -1.9759999999999998
0.3 1.1476 -0.8475999999999999
0.3 0.5248 -0.22480000000000006
0.3 0.4078 -0.1078
0.3 0.2252 0.07479999999999998
0.3 0.0414 0.2586
0.3 0.2701 0.029899999999999982
0.3 0.8394 -0.5394000000000001
0.3 0.107 0.193
0.3 2.1616 -1.8616

CV final = 55630.0


individuo 2

Cc
280849.28250000003

Cph
3.1882315287746615e+25

CV

vmin vtubo  vmin-vtubo
0.3 1.733 -1.433
0.3 2.9023 -2.6023
0.3 1.5029 -1.2028999999999999
0.3 0.2494 0.05059999999999998
0.3 0.0058 0.2942
0.3 0.0447 0.25529999999999997
0.3 0.2183 0.0817
0.3 0.3648 -0.06480000000000002
0.3 1.1416 -0.8415999999999999
0.3 0.5137 -0.21370000000000006
0.3 2.6969 -2.3969

CV final = 68180.0


individuo 3

Cc
299028.44590000005

Cph
2.1110240332125169e+18

CV

vmin vtubo  vmin-vtubo

0.3 2.2084 -1.9084
0.3 0.3435 -0.04350000000000004
0.3 0.2576 0.04239999999999999
0.3 0.1864 0.11359999999999998
0.3 0.3763 -0.07630000000000003
0.3 1.1417 -0.8416999999999999
0.3 1.3605 -1.0605
0.3 1.0899 -0.7899
0.3 0.257 0.04299999999999998
0.3 2.0819 -1.7819
0.3 1.8936 -1.5936


CV final = 19899.999999999996


individuo 4

Cc
291901.3718

Cph
7.298427842889414e+17


CV

vmin vtubo  vmin-vtubo
0.3 2.4223 -2.1223
0.3 1.2417 -0.9417
0.3 0.8106 -0.5105999999999999
0.3 0.1323 0.1677
0.3 0.3619 -0.06190000000000001
0.3 0.2229 0.0771
0.3 0.625 -0.325
0.3 0.3035 -0.003500000000000003
0.3 0.5725 -0.2725
0.3 0.6503 -0.3503
0.3 2.1395 -1.8395


CV final = 24480.0


individuo 5

Cc
292901.3721

Cph
105160775637944.2

CV

vmin vtubo  vmin-vtubo
0.3 1.5404 -1.2404
0.3 1.3978 -1.0977999999999999
0.3 0.3317 -0.031700000000000006
0.3 0.135 0.16499999999999998
0.3 0.3418 -0.041800000000000004
0.3 0.1526 0.14739999999999998
0.3 0.5467 -0.24669999999999997
0.3 1.0714 -0.7713999999999999
0.3 0.033 0.267
0.3 1.6258 -1.3257999999999999
0.3 1.5868 -1.2868

CV final = 57939.99999999999
[{'individuo': 0, 'FO': 3.870122282218128e+19}, {'individuo': 1, 'FO': 3.1882315287746615e+25}, {'individuo': 2, 'FO': 2.1110240332128358e+18}, {'individuo': 3, 'FO': 7.298427842892577e+17}, {'individuo': 4, 'FO': 105160775988785.58}]

[{'FO': 706659903798.6869}, 
{'FO': 24142925092721.242}, 
{'FO': 90811913063606.9}, 
{'FO': 3412798932849579.5}, 
{'FO': 4.129622755717525e+19}, 
{'FO': 3.379832897376418e+22}, 
{'FO': 8.918480788997034e+22}, 
{'FO': 2.687074728152441e+24}, 
{'FO': 1.976129949868638e+38}, 
{'FO': 1.561084222612367e+41}]

[{'FO': 706659903798.6869}, 
{'FO': 706659903798.6869}, 
{'FO': 24142925092721.242}, 
{'FO': 24142925092721.242},
 {'FO': 90811913063606.9}, 
 {'FO': 90811913063606.9}, 
 {'FO': 3412798932849579.5},
  {'FO': 4.129622755717525e+19},
   {'FO': 3.379832897376418e+22},
    {'FO': 8.918480788997034e+22}, 
    {'FO': 2.687074728152441e+24}, 
    {'FO': 1.976129949868638e+38}]


[{'FO': 2983189112487.019},
 {'FO': 2983189112487.019}, 
 {'FO': 23662497089375.82}, 
 {'FO': 23662497089375.82},
  {'FO': 81401243665584.25}, 
  {'FO': 81401243665584.25}, 
  {'FO': 570087147327691.2}, 
  {'FO': 804715667687769.8}, 
  {'FO': 1030798311284414.8},
   {'FO': 1.2998472576360924e+16}, 
   {'FO': 1.7262646818122675e+17}, 
   {'FO': 4.56229628400608e+22},
    {'FO': 9.422736826175947e+22},
     {'FO': 7.156725051648193e+24},
      {'FO': 2.400875265884435e+30}, 
{'FO': 5.0547725893868934e+30}]

[{'FO': 5208502895044.184, 'binarios': '1110010100010111111011'}, 
{'FO': 5208502895044.184, 'binarios': '1110010100010111111011'},
{'FO': 73441606565663.55, 'binarios': '1011110101101010110001'}, 
{'FO': 73441606565663.55, 'binarios': '1011110101101010110001'}, 
{'FO': 470543951132860.44, 'binarios': '0100010001011011001111'}, 
{'FO': 3.9399158911720045e+17, 'binarios': '0110000011110101111110'}, 
{'FO': 1.2336948249787116e+21, 'binarios': '1001110010010001001100'}, 
{'FO': 3.29930858783321e+21, 'binarios': '0000010000001001101010'}, 
{'FO': 2.4211432650339365e+23, 'binarios': '1111001101010111000100'}, 
{'FO': 2.0508619892008828e+32, 'binarios': '0001110111001000011001'}]

[
    [
        {'b': 2, 'a': 7}, {'b': 8, 'a': 10}, {'b': 5, 'a': 9}, {'b': 1, 'a': 3}, {'b': 6, 'a': 4}
    ], 
    [
        {'FO': 4529413950475.822, 'binarios': '1100100111011011001111'}, 
        {'FO': 4529413950475.822, 'binarios': '1100100111011011001111'}, 
        {'FO': 34628987908900.656, 'binarios': '1100011101000111011011'}, 
        {'FO': 34628987908900.656, 'binarios': '1100011101000111011011'}, 
        {'FO': 210880138722296.0, 'binarios': '1011110011111011001010'}, 
        {'FO': 1.878336585580028e+19, 'binarios': '0100010101111001001110'}, 
        {'FO': 1.6246841118691392e+21, 'binarios': '0001110001100110001110'}, 
        {'FO': 2.1346724603488898e+21, 'binarios': '0010011010111010110110'}, 
        {'FO': 1.5342476936506196e+23, 'binarios': '0001000010011100000110'}, 
        {'FO': 1.120140057486609e+24, 'binarios': '1101001101101101100100'}
    ]
]


    #     matrizBinarios = np.matrix([['11', '10', '10', '11', '10', '00', '10', '01', '00', '11', '00'],
    #  ['11', '01', '00', '11', '00', '10' ,'00', '01', '00', '01', '00'],
    #  ['00', '11', '01', '10', '11', '01', '01' ,'10', '11', '00', '11'],
    #  ['10', '11', '01', '11' ,'00' ,'01', '00' ,'11', '10', '00', '01'],
    #  ['10', '01', '01', '10', '11', '11', '01', '00', '01', '01', '11']])